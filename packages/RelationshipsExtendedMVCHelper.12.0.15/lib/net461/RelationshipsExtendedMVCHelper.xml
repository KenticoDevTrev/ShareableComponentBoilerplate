<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RelationshipsExtendedMVCHelper</name>
    </assembly>
    <members>
        <member name="T:RelationshipsExtended.RelHelper">
            <summary>
            Helper methods for generating Where Conditions for Relationships
            </summary>
        </member>
        <member name="P:RelationshipsExtended.RelHelper.CurrentSiteName">
            <summary>
            Gets the Current Site Name based on the request's Host (HttpContext.Current.Request.Host) and a match on the Presentation Url for the Sites Object in Kentico.  Returns an empty or null string if not found.
            </summary>
        </member>
        <member name="P:RelationshipsExtended.RelHelper.CurrentSiteID">
            <summary>
            Gets the Current Site ID based on the request's Host (HttpContext.Current.Request.Host) and a match on the Presentation Url for the Sites Object in Kentico.  -1 if not found.
            </summary>
        </member>
        <member name="P:RelationshipsExtended.RelHelper.CacheMinutes">
            <summary>
            Cache minutes, tries to use the current site, otherwise if it can't find the current site then 30
            </summary>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.GetDocumentCategoryWhere(System.Collections.Generic.IEnumerable{System.Object},RelationshipsExtended.Enums.ConditionType,System.String)">
            <summary>
            Returns a full where condition (for Document Category Relationships) to be used in filtering (ex repeaters).  
            </summary>
            <param name="Values">list of category values (int IDs, GUIDs, or string CodeNames)</param>
            <param name="Condition">RelEnums.ConditionType of what type of condition to generate.</param>
            <param name="DocumentIDTableName">The Table Name/Alias where the DocumentID belongs. Only needed for the 'All' Condition, defaults to CMS_Document.</param>
            <returns>The Where Condition, If no categories provided or none found, returns 1=1</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.GetNodeCategoryWhere(System.Collections.Generic.IEnumerable{System.Object},RelationshipsExtended.Enums.ConditionType,System.String)">
            <summary>
            Returns a full where condition (for Node Category Relationships) to be used in filtering (ex repeaters).  
            </summary>
            <param name="Values">list of category values (int IDs, GUIDs, or string CodeNames)</param>
            <param name="Condition">RelEnums.ConditionType of what type of condition to generate.</param>
            <param name="NodeIDTableName">The Table Name/Alias where the NodeID belongs. Only needed for the 'All' Condition, defaults to CMS_Tree.</param>
            <returns>The Where Condition, If no categories provided or none found, returns 1=1</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.GetBindingCategoryWhere(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Object},RelationshipsExtended.Enums.IdentityType,RelationshipsExtended.Enums.ConditionType,System.String)">
            <summary>
            Returns a full where condition (for Binding tables that bind an object to Categories) to be used in filtering (ex repeaters).  For property examples we will use Demo.Foo, CMS.Category, and Demo.FooCategory  
            </summary>
            <param name="BindingClass">The Binding Class Code Name</param>
            <param name="ObjectIDFieldName">The Field Name of this object that matches the binding table's Left Field value. Ex: FooID (From Demo.Foo)</param>
            <param name="LeftFieldName">The Field Name of the binding class that contains this Object IDs value.  Ex: FooID (from Demo.FooCategory)</param>
            <param name="RightFieldName">The Field Name of the binding class that contains the Category's identy value.  Ex: CategoryID (from Demo.FooCategory) </param>
            <param name="Values">list of category values (int IDs, GUIDs, or string CodeNames)</param>
            <param name="Identity">RelEnums.IdentityType of what value is stored in the binding table for the category, default is ID</param>
            <param name="Condition">RelEnums.ConditionType of what type of condition to generate.</param>
            <param name="ObjectIDTableName">The Table Name/Alias where the ObjectIDFieldName belongs. Only needed for the 'All' Condition and if the ObjectIDField and LeftFieldName are the same. Ex: Demo_Foo</param>
            <returns>The Where Condition, If no categories provided or none found, returns 1=1</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.GetBindingWhere(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},RelationshipsExtended.Enums.IdentityType,RelationshipsExtended.Enums.ConditionType,System.String)">
            <summary>
            Returns a full where condition (for Binding Tables that bind on any object) to be used in filtering (ex repeaters).  For property exampples, we will assume Demo.Foo, Demo.Bar, and Demo.FooBar
            </summary>
            <param name="BindingClass">The Binding Class Code Name.  Ex: Demo.FooBar</param>
            <param name="ObjectClass">The Object Class Code Name (the thing that is bound to the current object through the binding table).  Ex: Demo.Bar</param>
            <param name="ObjectIDFieldName">The Field Name of this object that matches the binding table's Left Field value. Ex: FooID (from Demo.Foo)</param>
            <param name="LeftFieldName">The Field Name of the binding class that contains this Object IDs value. Ex: FooID (from Demo.FooBar)</param>
            <param name="RightFieldName">The Field Name of the binding class that contains the related objects's identy value.  Ex: BarID (from Demo.FooBar)</param>
            <param name="Values">list of object values (int IDs, GUIDs, or string CodeNames)</param>
            <param name="Identity">RelEnums.IdentityType of what value is stored in the binding table for the category, default is ID</param>
            <param name="Condition">RelEnums.ConditionType of what type of condition to generate.</param>
            <param name="ObjectIDTableName">The Table Name/Alias where the ObjectIDFieldName belongs. Only needed for the 'All' Condition and if the ObjectIDField and LeftFieldName are the same. Ex: Demo_FooBar</param>
            <returns>The Where Condition, If no object values provided or none found, returns 1=1</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.GetPrimaryNodeID(System.Int32)">
            <summary>
            Returns the proper Node ID, if the Node is a Linked Node, it will cycle through the Nodes it's lined to until it finds a Non-lined node.
            </summary>
            <param name="NodeID">The NodeID</param>
            <returns>The Non-Linked Node ID, -1 if it can't find the main Node</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.CategoryIdentitiesWhere(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Gets the Category identities where condition (ex (CategoryID in (1,2,3) )
            </summary>
            <param name="CategoryIdentifications">List of Ints, Guids, or CodeNames of the Categories</param>
            <returns>the Category identity where condition</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.CategoryIdentitiesToIDs(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Converts Category IDs, Guids, or CodeNames to CategoryIDs
            </summary>
            <param name="CategoryIdentifications">List of Category IDs, Guids, or CodeNames</param>
            <returns>List of Category IDs</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.CategoryIdentitiesToGUIDs(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Converts Category IDs, Guids, or CodeNames to CategoryGUIDs
            </summary>
            <param name="CategoryIdentifications">List of Category IDs, Guids, or CodeNames</param>
            <returns>List of Category GUIDs</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.CategoryIdentitiesToCodeNames(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Converts Category IDs, Guids, or CodeNames to Category CodeNames
            </summary>
            <param name="CategoryIdentifications">List of Category IDs, Guids, or CodeNames</param>
            <returns>List of Category Code Names</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.GetClassObjSummary(System.String)">
            <summary>
            Gets a Class Object Summary based on the class name.
            </summary>
            <param name="ClassName">The Class Name</param>
            <returns>The Class Object Summary</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.ObjectIdentitiesToIDs(RelationshipsExtended.ClassObjSummary,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Converts an Object's IDs, Guids, or CodeNames to the Object IDs
            </summary>
            <param name="classObjSummary">The Class Object Summary</param>
            <param name="ObjectIdentifications">List of Object IDs, Guids, or CodeNames</param>
            <returns>A list of the Object's IDs</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.ObjectIdentitiesToGUIDs(RelationshipsExtended.ClassObjSummary,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Converts an Object's IDs, Guids, or CodeNames to the Objects GUID
            </summary>
            <param name="classObjSummary">The Class Object Summary</param>
            <param name="ObjectIdentifications">List of Object IDs, Guids, or CodeNames</param>
            <returns>A list of the Object's GUIDs</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.ObjectIdentitiesToCodeNames(RelationshipsExtended.ClassObjSummary,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Converts an Object's IDs, Guids, or CodeNames to the Objects CodeNames
            </summary>
            <param name="classObjSummary">The Class Object Summary</param>
            <param name="ObjectIdentifications">List of Object IDs, Guids, or CodeNames</param>
            <returns>A list of the Object's Code Names</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.ObjectIdentitiesWhere(RelationshipsExtended.ClassObjSummary,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Gets the Object WHERE condition based on the given identities
            </summary>
            <param name="classObjSummary">The Class Object Summary</param>
            <param name="ObjectIdentifications">List of IDs, Guids, or CodeNames</param>
            <returns>The WHERE condition to select the objects (ex MyObjectID in (1,2,3) )</returns>
        </member>
        <member name="M:RelationshipsExtended.RelHelper.GetBracketedColumnName(System.String)">
            <summary>
            Makes sure to wrap the field in []'s, along with handling full-pathed fields such as My_Table.MyField
            </summary>
            <param name="Field">The Field Name (ex MyField, or My_Table.MyField)</param>
            <returns>The properly formatted FieldName</returns>
        </member>
        <member name="T:RelationshipsExtended.ClassObjSummary">
            <summary>
            Internal use only, creates a summary of a Class for processing
            </summary>
        </member>
        <member name="T:RelationshipsExtended.Enums.ConditionType">
            <summary>
            The Binding Condition
            </summary>
        </member>
        <member name="F:RelationshipsExtended.Enums.ConditionType.Any">
            <summary>
            Any of the given values match
            </summary>
        </member>
        <member name="F:RelationshipsExtended.Enums.ConditionType.All">
            <summary>
            All the binding values must be found (if 5 passed, it must have those 5)
            </summary>
        </member>
        <member name="F:RelationshipsExtended.Enums.ConditionType.None">
            <summary>
            That none of the given values are found in the binding.
            </summary>
        </member>
        <member name="T:RelationshipsExtended.Enums.IdentityType">
            <summary>
            The identity field type
            </summary>
        </member>
        <member name="F:RelationshipsExtended.Enums.IdentityType.ID">
            <summary>
            Integar ID
            </summary>
        </member>
        <member name="F:RelationshipsExtended.Enums.IdentityType.Guid">
            <summary>
            Unique Identifier
            </summary>
        </member>
        <member name="F:RelationshipsExtended.Enums.IdentityType.CodeName">
            <summary>
            Kentico CodeName
            </summary>
        </member>
        <member name="T:RelationshipsExtended.Enums.EnumMacroEvaluator">
            <summary>
            Macro Evaluator, used to allow access to the enums through the AccentsEnums.[Enum] macro command.
            </summary>
        </member>
        <member name="M:RelationshipsExtended.Enums.EnumMacroEvaluator.EnumMacroObjects">
            <summary>
            Callback method that provides the value of the 'CallbackField' macro field
            </summary>
            <returns></returns>
        </member>
        <member name="T:RelationshipsExtended.Enums.EnumUtil">
            <summary>
            Used to set Enum Macro values
            </summary>
        </member>
        <member name="M:RelationshipsExtended.Enums.EnumUtil.GetValues``1">
            <summary>
            Gets the value of the Enumerator
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:RelationshipsExtended.RelationshipsExtendedLoaderModule">
            <summary>
            Adds Macros to engine
            </summary>
        </member>
        <member name="M:RelationshipsExtended.RelationshipsExtendedLoaderModule.#ctor">
            <summary>
            Initializer
            </summary>
        </member>
        <member name="M:RelationshipsExtended.RelationshipsExtendedLoaderModule.OnInit">
            <summary>
            Contains initialization code that is executed when the application starts
            </summary>
        </member>
        <member name="T:RelationshipsExtended.RelHelperMacroNamespace">
            <summary>
            Macro Namespace
            </summary>
        </member>
        <member name="T:RelationshipsExtended.RelHelperMacrosMethods">
            <summary>
            Macro methods for RelHelper
            </summary>
        </member>
    </members>
</doc>
