<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Search.Data</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Azure.Search.DocumentsOperations.#ctor(Microsoft.Azure.Search.SearchIndexClient)">
            <summary>
            Initializes a new instance of the DocumentsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Search.DocumentsOperations.Client">
            <summary>
            Gets a reference to the SearchIndexClient
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.DocumentsOperationsExtensions">
            <summary>
            Operations for querying an index and uploading, merging, and deleting documents.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Document-operations" />
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Count(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Queries the number of documents in the Azure Search index.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.CountAsync(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Queries the number of documents in the Azure Search index.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.ContinueSearch(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Retrieves the next page of search results from the Azure Search index. 
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the ContinueSearch, ContinueSearchAsync, and
            ContinueSearchWithHttpMessagesAsync methods make a best-effort attempt to map JSON types in the response
            payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.ContinueSearchAsync(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves the next page of search results from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the ContinueSearch, ContinueSearchAsync, and
            ContinueSearchWithHttpMessagesAsync methods make a best-effort attempt to map JSON types in the response
            payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.ContinueSearch``1(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Retrieves the next page of search results from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the ContinueSearch, ContinueSearchAsync, and ContinueSearchWithHttpMessagesAsync
            methods support mapping of Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.ContinueSearchAsync``1(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves the next page of search results from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the ContinueSearch, ContinueSearchAsync, and ContinueSearchWithHttpMessagesAsync
            methods support mapping of Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Get(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Retrieves a document from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="key">
            The key of the document to retrieve; See 
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will be missing from the
            returned document. All retrievable fields are included in the result by default.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            The requested document.
            </returns>
            <remarks>
            The non-generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods make a best-effort
            attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.GetAsync(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="key">
            The key of the document to retrieve; See 
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will be missing from the
            returned document.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            The requested document.
            </returns>
            <remarks>
            The non-generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods make a best-effort
            attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Get``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Retrieves a document from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="key">
            The key of the document to retrieve; See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will have null or default as its
            corresponding property value in the returned object. All retrievable fields are included in the result by
            default.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            The requested document.
            </returns>
            <remarks>
            The generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods support mapping of Azure
            Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.GetAsync``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="key">
            The key of the document to retrieve; See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will have null or default as its
            corresponding property value in the returned object. All retrievable fields are included in the result by
            default.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            The requested document.
            </returns>
            <remarks>
            The generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods support mapping of Azure
            Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Index(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.IndexBatch,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <remarks>
            The non-generic overloads of the Index, IndexAsync, and IndexWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.IndexAsync(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.IndexBatch,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <remarks>
            The non-generic overloads of the Index, IndexAsync, and IndexWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Index``1(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.IndexBatch{``0},Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
            <remarks>
            The generic overloads of the Index and IndexAsync methods support mapping of Azure Search field types to
            .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.IndexAsync``1(Microsoft.Azure.Search.IDocumentsOperations,Microsoft.Azure.Search.Models.IndexBatch{``0},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
            <remarks>
            The generic overloads of the Index and IndexAsync methods support mapping of Azure Search field types to
            .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Search(Microsoft.Azure.Search.IDocumentsOperations,System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Searches for documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.SearchAsync(Microsoft.Azure.Search.IDocumentsOperations,System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Search``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Searches for documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods support mapping
            of Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.SearchAsync``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods support mapping
            of Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Suggest(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Suggests query terms based on input text and matching documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The non-generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.SuggestAsync(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The non-generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.Suggest``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions)">
            <summary>
            Suggests query terms based on input text and matching documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods support
            mapping of Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsOperationsExtensions.SuggestAsync``1(Microsoft.Azure.Search.IDocumentsOperations,System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods support
            mapping of Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Search.IDocumentsOperations">
            <summary>
            Defines operations for querying an index and uploading, merging, and deleting documents.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Document-operations" />
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.CountWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Queries the number of documents in the Azure Search index.
            </summary>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.ContinueSearchWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the next page of search results from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the ContinueSearch, ContinueSearchAsync, and
            ContinueSearchWithHttpMessagesAsync methods make a best-effort attempt to map JSON types in the response
            payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.ContinueSearchWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the next page of search results from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search results from the index.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the ContinueSearch, ContinueSearchAsync, and ContinueSearchWithHttpMessagesAsync
            methods support mapping of Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            <para>
            Note that this method is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            parameters to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">Search</c>
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <param name="key">
            The key of the document to retrieve; See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will be missing from the
            returned document.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the document.
            </returns>
            <remarks>
            The non-generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods make a best-effort
            attempt to map JSON types in the response payload to .NET types. This mapping does not have the benefit of
            precise type information from the index, so the mapping is not always correct. In particular, be aware of
            the following cases:
            <list type="bullet">
            <item>
            <description>
            Any numeric value without a decimal point will be deserialized to System.Int64 (long in C#).
            </description>
            </item>
            <item>
            <description>
            Special double-precision floating point values such as NaN and Infinity will be deserialized as type
            System.String rather than System.Double.
            </description>
            </item>
            <item>
            <description>
            Any string field with a value formatted like a DateTimeOffset will be deserialized incorrectly. We
            recommend storing such values in Edm.DateTimeOffset fields rather than Edm.String fields.
            </description>
            </item>
            <item>
            <description>
            Any Edm.DateTimeOffset field will be deserialized as a System.DateTimeOffset, not System.DateTime.
            </description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Lookup-Document"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name="key">
            The key of the document to retrieve; See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules"/> for the rules for constructing valid
            document keys.
            </param>
            <param name="selectedFields">
            List of field names to retrieve for the document; Any field not retrieved will have null or default as its
            corresponding property value in the returned object.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the document.
            </returns>
            <remarks>
            The generic overloads of the Get, GetAsync, and GetWithHttpMessagesAsync methods support mapping of Azure
            Search field types to .NET types via the type parameter T. Note that all Azure Search field types except
            collections are nullable, so we recommend using nullable primitive types for the properties of type T.
            The type mapping is as follows:
            <list type="table">
            <listheader>
            <term>Azure Search field type</term>
            <description>.NET type</description>
            </listheader>
            <item>
            <term>Edm.String</term>
            <description>System.String (string in C#)</description>
            </item>
            <item>
            <term>Collection(Edm.String)</term>
            <description>IEnumerable&lt;System.String&gt;</description>
            </item>
            <item>
            <term>Edm.Boolean</term>
            <description>System.Nullable&lt;System.Boolean&gt; (bool? in C#)</description>
            </item>
            <item>
            <term>Edm.Double</term>
            <description>System.Nullable&lt;System.Double&gt; (double? in C#)</description>
            </item>
            <item>
            <term>Edm.Int32</term>
            <description>System.Nullable&lt;System.Int32&gt; (int? in C#)</description>
            </item>
            <item>
            <term>Edm.Int64</term>
            <description>System.Nullable&lt;System.Int64&gt; (long? in C#)</description>
            </item>
            <item>
            <term>Edm.DateTimeOffset</term>
            <description>
            System.Nullable&lt;System.DateTimeOffset&gt; (DateTimeOffset? in C#) or
            System.Nullable&lt;System.DateTime&gt; (DateTime? in C#). Both types work, although we recommend using
            DateTimeOffset. When retrieving documents, DateTime values will always be in UTC. When indexing documents,
            DateTime values are interpreted as follows:
            <list type="table">
            <item>
            <term>UTC DateTime</term>
            <description>Sent as-is to the index.</description>
            </item>
            <item>
            <term>Local DateTime</term>
            <description>Converted to UTC before being sent to the index.</description>
            </item>
            <item>
            <term>DateTime with unspecified time zone</term>
            <description>Assumed to be UTC and sent as-is to the index.</description>
            </item>
            </list>
            </description>
            </item>
            <item>
            <term>Edm.GeographyPoint</term>
            <description><c cref="T:Microsoft.Spatial.GeographyPoint">Microsoft.Spatial.GeographyPoint</c></description>
            </item>
            </list> 
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.IndexWithHttpMessagesAsync(Microsoft.Azure.Search.Models.IndexBatch,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <remarks>
            The non-generic overloads of the Index, IndexAsync, and IndexWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.IndexWithHttpMessagesAsync``1(Microsoft.Azure.Search.Models.IndexBatch{``0},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="batch">
            The batch of index actions.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Search.IndexBatchException">
            Thrown when some of the indexing actions failed, but other actions succeeded and modified the state of
            the index. This can happen when the Search Service is under heavy indexing load. It is important to
            explicitly catch this exception and check its
            <c cref="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">IndexResult</c> property. This property reports the status
            of each indexing action in the batch, making it possible to determine the state of the index after a
            partial failure.
            </exception>
            <returns>
            Response containing the status of operations for all actions in the batch.
            </returns>
            <remarks>
            The generic overloads of the Index, IndexAsync, and IndexWithHttpMessagesAsync methods support mapping of
            Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The non-generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.SearchWithHttpMessagesAsync``1(System.String,Microsoft.Azure.Search.Models.SearchParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name="searchText">
            A full-text search query expression; Use null or "*" to match all documents. See
            <see href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search"/> for more information about search
            query syntax.
            </param>
            <param name="searchParameters">
            Parameters to further refine the search query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <remarks>
            <para>
            The generic overloads of the Search, SearchAsync, and SearchWithHttpMessagesAsync methods support mapping
            of Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </para>
            <para>
            If Azure Search can't include all results in a single response, the response returned will include a
            continuation token that can be passed to ContinueSearch to retrieve more results.
            See <c cref="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">DocumentSearchResultBase.ContinuationToken</c>
            for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.SuggestWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The non-generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods make a
            best-effort attempt to map JSON types in the response payload to .NET types. See
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsOperations.SuggestWithHttpMessagesAsync``1(System.String,System.String,Microsoft.Azure.Search.Models.SuggestParameters,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Suggestions"/>
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <param name="searchText">
            The search text on which to base suggestions.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection that's part of the index definition.
            </param>
            <param name="suggestParameters">
            Parameters to further refine the suggestion query.
            </param>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <returns>
            Response containing the suggested text and documents matching the query.
            </returns>
            <remarks>
            The generic overloads of the Suggest, SuggestAsync, and SuggestWithHttpMessagesAsync methods support
            mapping of Azure Search field types to .NET types via the type parameter T. See 
            <see cref="M:Microsoft.Azure.Search.IDocumentsOperations.GetWithHttpMessagesAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)"/>
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.Document">
            <summary>
            Represents a document as a property bag. This is useful for scenarios where the index schema is only known
            at run-time.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.Document.#ctor">
            <summary>
            Initializes a new instance of the Document class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentSearchResult">
            <summary>
            Response containing search results from an Azure Search index.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2">
            <summary>
            Response containing search results from an Azure Search index.
            </summary>
            <typeparam name="TDoc">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <typeparam name="TResult">
            Type of the model class that encapsulates documents in a search response.
            </typeparam>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.Count">
            <summary>
            Gets the total count of results found by the search operation, or null if the count was not requested.
            </summary>
            <remarks>
            If present, the count may be greater than the number of results in this response. This can happen if you
            use the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> or <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c> parameters, or
            if Azure Search can't return all the requested documents in a single Search response.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.Coverage">
            <summary>
            Gets a value indicating the percentage of the index that was included in the query, or null if
            MinimumCoverage was not set in the <c cref="T:Microsoft.Azure.Search.Models.SearchParameters">SearchParameters</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.Facets">
            <summary>
            Gets the facet query results for the search operation, or null if the query did not include any facet
            expressions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.Results">
            <summary>
            Gets the sequence of results returned by the query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSearchResultBase`2.ContinuationToken">
            <summary>
            Gets a continuation token that is used to continue fetching search results. This is necessary when Azure
            Search cannot fulfill a search request with a single response.
            </summary>
            <remarks>
            <para>
            This property will be null unless Azure Search can't return all the requested documents in a single Search
            response. That can happen for different reasons which are implementation-specific and subject to change.
            Robust clients should always be ready to handle cases where fewer documents than expected are returned and
            a continuation token is included to continue retrieving documents. If this property is not null, you can
            pass its value to the
            <c cref="M:Microsoft.Azure.Search.IDocumentsOperations.ContinueSearchWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchContinuationToken,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">ContinueSearchAsync</c>
            method to retrieve more search results.
            </para>
            <para>
            Note that this property is not meant to help you implement paging of search results. You can implement
            paging using the <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Top">Top</c> and <c cref="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">Skip</c>
            search parameters.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentSearchResult`1">
            <summary>
            Response containing search results from an Azure Search index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentSuggestResult">
            <summary>
            Response containing suggestion query results from an Azure Search index.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentSuggestResultBase`2">
            <summary>
            Response containing suggestion query results from an Azure Search index.
            </summary>
            <typeparam name="TDoc">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
            <typeparam name="TResult">
            Type of the model class that encapsulates documents in a suggestion response.
            </typeparam>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSuggestResultBase`2.Coverage">
            <summary>
            Gets a value indicating the percentage of the index that was included in the query, or null if
            MinimumCoverage was not set in the <c cref="T:Microsoft.Azure.Search.Models.SuggestParameters">SuggestParameters</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentSuggestResultBase`2.Results">
            <summary>
            Gets the sequence of results returned by the query.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentSuggestResult`1">
            <summary>
            Response containing suggestion query results from an Azure Search index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be retrieved as documents
            from the index.
            </typeparam>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.FacetResult">
            <summary>
            A single bucket of a facet query result that reports the number of documents with a field falling within a
            particular range or having a particular value or interval.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.FacetResult.#ctor">
            <summary>
            Initializes a new instance of the Facet class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.Type">
            <summary>
            Gets a value indicating the type of this facet.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.From">
            <summary>
            Gets a value indicating the inclusive lower bound of the facet's range, or null to indicate that there is
            no lower bound (i.e. -- for the first bucket).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.To">
            <summary>
            Gets a value indicating the exclusive upper bound of the facet's range, or null to indicate that there is
            no upper bound (i.e. -- for the last bucket).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.Value">
            <summary>
            Gets the value of the facet, or the inclusive lower bound if it's an interval facet.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.FacetResult.Count">
            <summary>
            Gets the approximate count of documents falling within the bucket described by this facet.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.FacetResult.AsRangeFacetResult``1">
            <summary>
            Attempts to convert the facet to a range facet of the given type.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was applied. Valid types include
            <c cref="T:System.DateTimeOffset">DateTimeOffset</c>, <c cref="T:System.Double">Double</c>, and
            <c cref="T:System.Int64">Int64</c> (long in C#).
            </typeparam>
            <returns>A new strongly-typed range facet instance.</returns>
            <exception cref="T:System.InvalidCastException">This instance is not a range facet of the given type.</exception>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.FacetResult.AsValueFacetResult``1">
            <summary>
            Attempts to convert the facet to a value facet of the given type.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was applied.
            </typeparam>
            <returns>A new strongly-typed value facet instance.</returns>
            <exception cref="T:System.InvalidCastException">This instance is not a value facet of the given type.</exception>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.FacetResults">
            <summary>
            Contains all the results of a facet query, organized as a collection of buckets for each faceted field.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.FacetType">
            <summary>
            Specifies the type of a facet query result.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Search.Models.FacetType.Value">
            <summary>
            The facet counts documents with a particular field value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Search.Models.FacetType.Range">
            <summary>
            The facet counts documents with a field value in a particular range.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.HitHighlights">
            <summary>
            Contains all the hit highlights for a document, organized as a collection of text fragments for each
            applicable field.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexAction">
            <summary>
            Represents an index action that operates on a document.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Delete(System.String,System.String)">
            <summary>
            Creates a new IndexAction for deleting a document.
            </summary>
            <param name="keyName">The name of the key field of the index.</param>
            <param name="keyValue">The key of the document to delete.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Delete(Microsoft.Azure.Search.Models.Document)">
            <summary>
            Creates a new IndexAction for deleting a document.
            </summary>
            <param name="document">The document to delete; Fields other than the key are ignored.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Delete``1(``0)">
            <summary>
            Creates a new IndexAction for deleting a document.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="document">The document to delete; Fields other than the key are ignored.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Merge(Microsoft.Azure.Search.Models.Document)">
            <summary>
            Creates a new IndexAction for merging a document into an existing document in the index.
            </summary>
            <param name="document">The document to merge; Set only the fields that you want to change.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Merge``1(``0)">
            <summary>
            Creates a new IndexAction for merging a document into an existing document in the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="document">The document to merge; Set only the properties that you want to change.</param>
            <returns>A new IndexAction.</returns>
            <remarks>
            If type T contains non-nullable value-typed properties, these properties may not merge correctly. If you
            do not set such a property, it will automatically take its default value (for example, 0 for int or false
            for bool), which will override the value of the property currently stored in the index, even if this was
            not your intent. For this reason, it is strongly recommended that you always declare value-typed
            properties to be nullable in type T.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload(Microsoft.Azure.Search.Models.Document)">
            <summary>
            Creates a new IndexAction for uploading a document to the index, or merging it into an existing document
            if it already exists in the index.
            </summary>
            <param name="document">The document to merge or upload.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload``1(``0)">
            <summary>
            Creates a new IndexAction for uploading a document to the index, or merging it into an existing document
            if it already exists in the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="document">The document to merge or upload.</param>
            <returns>A new IndexAction.</returns>
            <remarks>
            If type T contains non-nullable value-typed properties, these properties may not merge correctly. If you
            do not set such a property, it will automatically take its default value (for example, 0 for int or false
            for bool), which will override the value of the property currently stored in the index, even if this was
            not your intent. For this reason, it is strongly recommended that you always declare value-typed
            properties to be nullable in type T.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Upload(Microsoft.Azure.Search.Models.Document)">
            <summary>
            Creates a new IndexAction for uploading a document to the index.
            </summary>
            <param name="document">The document to upload.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexAction.Upload``1(``0)">
            <summary>
            Creates a new IndexAction for uploading a document to the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="document">The document to upload.</param>
            <returns>A new IndexAction.</returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexActionBase`1">
            <summary>
            Abstract base class for index actions that operate on a document.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexActionBase`1.#ctor(Microsoft.Azure.Search.Models.IndexActionType,`0)">
            <summary>
            Initializes a new instance of the IndexActionBase class with the given action type.
            </summary>
            <param name="actionType">The type of action to perform on the document.</param>
            <param name="document">The document on which the action will be performed.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexActionBase`1.ActionType">
            <summary>
            Gets a value indicating the action to perform on a document in an indexing batch.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexActionBase`1.Document">
            <summary>
            Gets the document on which the action will be performed; Fields other than the key are ignored for
            delete actions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexAction`1">
            <summary>
            Represents an index action that operates on a document.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexBatch">
            <summary>
            Contains a batch of document upload, merge, and/or delete operations to send to the Azure Search index.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction})">
            <summary>
            Initializes a new instance of the IndexBatch class.
            </summary>
            <param name="actions">The index actions to include in the batch.</param>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Delete(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new IndexBatch for deleting a batch of documents.
            </summary>
            <param name="keyName">The name of the key field that uniquely identifies documents in the index.</param>
            <param name="keyValues">The keys of the documents to delete.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.Document})">
            <summary>
            Creates a new IndexBatch for deleting a batch of documents.
            </summary>
            <param name="documents">The documents to delete; Fields other than the key are ignored.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new IndexBatch for deleting a batch of documents.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="documents">The documents to delete; Fields other than the key are ignored.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Merge(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.Document})">
            <summary>
            Creates a new IndexBatch for merging documents into existing documents in the index.
            </summary>
            <param name="documents">The documents to merge; Set only the fields that you want to change.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Merge``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new IndexBatch for merging documents into existing documents in the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="documents">The documents to merge; Set only the properties that you want to change.</param>
            <returns>A new IndexBatch.</returns>
            <remarks>
            If type T contains non-nullable value-typed properties, these properties may not merge correctly. If you
            do not set such a property, it will automatically take its default value (for example, 0 for int or false
            for bool), which will override the value of the property currently stored in the index, even if this was
            not your intent. For this reason, it is strongly recommended that you always declare value-typed
            properties to be nullable in type T.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.MergeOrUpload(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.Document})">
            <summary>
            Creates a new IndexBatch for uploading documents to the index, or merging them into existing documents
            for those that already exist in the index.
            </summary>
            <param name="documents">The documents to merge or upload.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.MergeOrUpload``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new IndexBatch for uploading documents to the index, or merging them into existing documents
            for those that already exist in the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="documents">The documents to merge or upload.</param>
            <returns>A new IndexBatch.</returns>
            <remarks>
            If type T contains non-nullable value-typed properties, these properties may not merge correctly. If you
            do not set such a property, it will automatically take its default value (for example, 0 for int or false
            for bool), which will override the value of the property currently stored in the index, even if this was
            not your intent. For this reason, it is strongly recommended that you always declare value-typed
            properties to be nullable in type T.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.New(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction})">
            <summary>
            Creates a new instance of the IndexBatch class.
            </summary>
            <param name="actions">The index actions to include in the batch.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.New``1(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{``0}})">
            <summary>
            Creates a new instance of the IndexBatch class.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="actions">The index actions to include in the batch.</param>
            <returns>A new IndexBatch.</returns>
            <remarks>
            You can use this method as a convenience if you don't want to explicitly specify your model class as a
            type parameter.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Upload(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.Document})">
            <summary>
            Creates a new IndexBatch for uploading documents to the index.
            </summary>
            <param name="documents">The documents to upload.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch.Upload``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new IndexBatch for uploading documents to the index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="documents">The documents to upload.</param>
            <returns>A new IndexBatch.</returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexBatchBase`2">
            <summary>
            Abstract base class for batches of upload, merge, and/or delete actions to send to the Azure Search index.
            </summary>
            <typeparam name="TAction">
            The type of action to be contained in the batch. Must be derived from IndexActionBase.
            </typeparam>
            <typeparam name="TDoc">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatchBase`2.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the IndexBatchBase class.
            </summary>
            <param name="actions">The index actions to include in the batch.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexBatchBase`2.Actions">
            <summary>
            Gets the sequence of actions in the batch.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexBatch`1">
            <summary>
            Contains a batch of upload, merge, and/or delete actions to send to the Azure Search index.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexBatch`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{`0}})">
            <summary>
            Initializes a new instance of the IndexBatch class.
            </summary>
            <param name="actions">The index actions to include in the batch.</param>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.RangeFacetResult`1">
            <summary>
            A single bucket of a range facet query result that reports the number of documents with a field value falling
            within a particular range.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was applied. Valid types include
            <c cref="T:System.DateTimeOffset">DateTimeOffset</c>, <c cref="T:System.Double">Double</c>, and
            <c cref="T:System.Int64">Int64</c> (long in C#).
            </typeparam>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.RangeFacetResult`1.Count">
            <summary>
            Gets the approximate count of documents falling within the bucket described by this facet.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.RangeFacetResult`1.From">
            <summary>
            Gets a value indicating the inclusive lower bound of the facet's range, or null to indicate that there is
            no lower bound (i.e. -- for the first bucket).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.RangeFacetResult`1.To">
            <summary>
            Gets a value indicating the exclusive upper bound of the facet's range, or null to indicate that there is
            no upper bound (i.e. -- for the last bucket).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.ScoringParameter">
            <summary>
            Represents a parameter value to be used in scoring functions (for example, referencePointParameter).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the ScoringParameter class with the given name and string values.
            </summary>
            <param name="name">Name of the scoring parameter.</param>
            <param name="values">Values of the scoring parameter.</param>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,Microsoft.Spatial.GeographyPoint)">
            <summary>
            Initializes a new instance of the ScoringParameter class with the given name and GeographyPoint value.
            </summary>
            <param name="name">Name of the scoring parameter.</param>
            <param name="value">Value of the scoring parameter.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.ScoringParameter.Name">
            <summary>
            Gets the name of the scoring parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.ScoringParameter.Values">
            <summary>
            Gets the values of the scoring parameter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.ScoringParameter.ToString">
            <summary>
            Returns the scoring parameter in a format that can be used in a Search API request.
            </summary>
            <returns>
            The scoring parameter as a colon-separated name-value pair (for example, mylocation:-122.2,44.8)
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchContinuationToken">
            <summary>
            Encapsulates state required to continue fetching search results. This is necessary when Azure Search cannot
            fulfill a search request with a single response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchParameters">
            <summary>
            Parameters for filtering, sorting, faceting, paging, and other search
            query behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchParameters.#ctor">
            <summary>
            Initializes a new instance of the SearchParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Facets">
            <summary>
            Gets or sets the list of facet expressions to apply to the search query. Each facet expression contains a
            field name, optionally followed by a comma-separated list of name:value pairs.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Search-Documents"/>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Filter">
            <summary>
            Gets or sets the OData $filter expression to apply to the search
            query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.HighlightFields">
            <summary>
            Gets or sets the list of field names to use for hit highlights.
            Only searchable fields can be used for hit highlighting.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with HighlightPreTag. Default is &amp;lt;/em&amp;gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights.
            Must be set with HighlightPostTag. Default is &amp;lt;em&amp;gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.IncludeTotalResultCount">
            <summary>
            Gets or sets a value that specifies whether to fetch the total
            count of results. Default is false. Setting this value to true
            may have a performance impact. Note that the count returned is an
            approximation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by a search query in order for
            the query to be reported as a success. This parameter can be
            useful for ensuring search availability even for services with
            only one replica. The default is 100.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.OrderBy">
            <summary>
            Gets or sets the list of OData $orderby expressions by which to
            sort the results. Each expression can be either a field name or a
            call to the geo.distance() function. Each expression can be
            followed by asc to indicate ascending, and desc to indicate
            descending. The default is ascending order. Ties will be broken
            by the match scores of documents. If no OrderBy is specified, the
            default sort order is descending by document match score. There
            can be at most 32 Orderby clauses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.QueryType">
            <summary>
            Gets or sets a value that specifies the syntax of the search query.
            The default is 'simple'. Use 'full' if your query uses the Lucene
            query syntax. Possible values for this property include: 'simple', 'full'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.ScoringParameters">
            <summary>
            Gets or sets the list of parameter values to be used in scoring
            functions (for example, referencePointParameter). Each parameter is
            a name/value pair encapsulated in a ScoringParameter object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.ScoringProfile">
            <summary>
            Gets or sets the name of a scoring profile to evaluate match
            scores for matching documents in order to sort the results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.SearchFields">
            <summary>
            Gets or sets the list of field names to include in the full-text
            search.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.SearchMode">
            <summary>
            Gets or sets a value that specifies whether any or all of the
            search terms must be matched in order to count the document as a
            match. Possible values for this property include: 'any', 'all'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Select">
            <summary>
            Gets or sets the list of fields to retrieve. If unspecified, all
            fields marked as retrievable in the schema are included.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Skip">
            <summary>
            Gets or sets the number of search results to skip. This value
            cannot be greater than 100,000. If you need to scan documents in
            sequence, but cannot use Skip due to this limitation, consider
            using OrderBy on a totally-ordered key and Filter with a range
            query instead.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParameters.Top">
            <summary>
            Gets or sets the number of search results to retrieve. This can be
            used in conjunction with Skip to implement client-side paging of
            search results.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchParameters.ToString">
            <summary>
            Converts the SearchParameters instance to a URL query string.
            </summary>
            <returns>A URL query string containing all the search parameters.</returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchResult">
            <summary>
            Contains a document found by a search query, plus associated metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchResult.#ctor">
            <summary>
            Initializes a new instance of the SearchResult class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchResultBase`1">
            <summary>
            Abstract base class for a result containing a document found by a search query, plus associated metadata.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchResultBase`1.#ctor">
            <summary>
            Initializes a new instance of the SearchResultBase class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchResultBase`1.Score">
            <summary>
            Gets the relevance score of the document compared to other documents returned by the query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchResultBase`1.Highlights">
            <summary>
            Gets text snippets from the document that indicate the matching search terms; null if hit highlighting
            was not enabled for the query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchResultBase`1.Document">
            <summary>
            Gets the document found by the search query.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchResult`1">
            <summary>
            Contains a document found by a search query, plus associated metadata.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchResult`1.#ctor">
            <summary>
            Initializes a new instance of the SearchResult class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SuggestParameters">
            <summary>
            Parameters for filtering, sorting, fuzzy matching, and other
            suggestions query behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestParameters.#ctor">
            <summary>
            Initializes a new instance of the SuggestParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.Filter">
            <summary>
            Gets or sets the OData $filter expression to apply to the
            suggestions query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with HighlightPreTag. If omitted, hit highlighting of
            suggestions is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights.
            Must be set with HighlightPostTag. If omitted, hit highlighting
            of suggestions is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by a suggestion query in order
            for the query to be reported as a success. This parameter can be
            useful for ensuring search availability even for services with
            only one replica. The default is 80.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.OrderBy">
            <summary>
            Gets or sets the list of OData $orderby expressions by which to
            sort the results. Each expression can be either a field name or a
            call to the geo.distance() function. Each expression can be
            followed by asc to indicate ascending, and desc to indicate
            descending. The default is ascending order. Ties will be broken
            by the match scores of documents. If no OrderBy is specified, the
            default sort order is descending by document match score. There
            can be at most 32 Orderby clauses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.SearchFields">
            <summary>
            Gets or sets the list of field names to consider when querying for
            suggestions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.Select">
            <summary>
            Gets or sets the list of fields to retrieve. If unspecified, all
            fields marked as retrievable in the schema are included.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.Top">
            <summary>
            Gets or sets the number of suggestions to retrieve. This must be a
            value between 1 and 100. The default is to 5.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching">
            <summary>
            Gets or sets a value indicating whether to use fuzzy matching for
            the suggestion query. Default is false. when set to true, the
            query will find suggestions even if there's a substituted or
            missing character in the search text. While this provides a
            better experience in some scenarios it comes at a performance
            cost as fuzzy suggestion searches are slower and consume more
            resources.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestParameters.ToString">
            <summary>
            Converts the SuggestParameters instance to a URL query string.
            </summary>
            <returns>A URL query string containing all the suggestion parameters.</returns>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SuggestResult">
            <summary>
            Contains a document found by a suggestion query, plus associated metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestResult.#ctor">
            <summary>
            Initializes a new instance of the SuggestResult class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SuggestResultBase`1">
            <summary>
            Abstract base class for a result containing a document found by a suggestion query, plus associated metadata.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestResultBase`1.#ctor">
            <summary>
            Initializes a new instance of the SuggestResultBase class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestResultBase`1.Text">
            <summary>
            Gets the text of the suggestion result.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestResultBase`1.Document">
            <summary>
            Gets the document on which the suggested text is based.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SuggestResult`1">
            <summary>
            Contains a document found by a suggestion query, plus associated metadata.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestResult`1.#ctor">
            <summary>
            Initializes a new instance of the SuggestResult class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.ValueFacetResult`1">
            <summary>
            A single bucket of a simple or interval facet query result that reports the number of documents with a field
            falling within a particular interval or having a specific value.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was applied.
            </typeparam>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.ValueFacetResult`1.Count">
            <summary>
            Gets the approximate count of documents falling within the bucket described by this facet.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.ValueFacetResult`1.Value">
            <summary>
            Gets the value of the facet, or the inclusive lower bound if it's an interval facet.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.DocumentIndexResult">
            <summary>
            Response containing the status of operations for all documents in the
            indexing request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.DocumentIndexResult.#ctor">
            <summary>
            Initializes a new instance of the DocumentIndexResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.DocumentIndexResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Search.Models.IndexingResult})">
            <summary>
            Initializes a new instance of the DocumentIndexResult class.
            </summary>
            <param name="results">The list of status information for each
            document in the indexing request.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.DocumentIndexResult.Results">
            <summary>
            Gets the list of status information for each document in the
            indexing request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexActionType">
            <summary>
            Defines values for IndexActionType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.IndexingResult">
            <summary>
            Status of an indexing operation for a single document.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexingResult.#ctor">
            <summary>
            Initializes a new instance of the IndexingResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.IndexingResult.#ctor(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the IndexingResult class.
            </summary>
            <param name="key">The key of a document that was in the indexing
            request.</param>
            <param name="errorMessage">The error message explaining why the
            indexing operation failed for the document identified by the key;
            null if indexing succeeded.</param>
            <param name="succeeded">A value indicating whether the indexing
            operation succeeded for the document identified by the key.</param>
            <param name="statusCode">The status code of the indexing operation.
            Possible values include: 200 for a successful update or delete, 201
            for successful document creation, 400 for a malformed input
            document, 404 for document not found, 409 for a version conflict,
            422 when the index is temporarily unavailable, or 503 for when the
            service is too busy.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexingResult.Key">
            <summary>
            Gets the key of a document that was in the indexing request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage">
            <summary>
            Gets the error message explaining why the indexing operation failed
            for the document identified by the key; null if indexing succeeded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexingResult.Succeeded">
            <summary>
            Gets a value indicating whether the indexing operation succeeded
            for the document identified by the key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.IndexingResult.StatusCode">
            <summary>
            Gets the status code of the indexing operation. Possible values
            include: 200 for a successful update or delete, 201 for successful
            document creation, 400 for a malformed input document, 404 for
            document not found, 409 for a version conflict, 422 when the index
            is temporarily unavailable, or 503 for when the service is too
            busy.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.QueryType">
            <summary>
            Defines values for QueryType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchMode">
            <summary>
            Defines values for SearchMode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SearchParametersPayload">
            <summary>
            Parameters for filtering, sorting, faceting, paging, and other search
            query behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchParametersPayload.#ctor">
            <summary>
            Initializes a new instance of the SearchParametersPayload class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SearchParametersPayload.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.String,System.Nullable{Microsoft.Azure.Search.Models.QueryType},System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Search.Models.SearchMode},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the SearchParametersPayload class.
            </summary>
            <param name="count">A value that specifies whether to fetch the
            total count of results. Default is false. Setting this value to
            true may have a performance impact. Note that the count returned is
            an approximation.</param>
            <param name="facets">The list of facet expressions to apply to the
            search query. Each facet expression contains a field name,
            optionally followed by a comma-separated list of name:value
            pairs.</param>
            <param name="filter">The OData $filter expression to apply to the
            search query.</param>
            <param name="highlight">The comma-separated list of field names to
            use for hit highlights. Only searchable fields can be used for hit
            highlighting.</param>
            <param name="highlightPostTag">A string tag that is appended to hit
            highlights. Must be set with HighlightPreTag. Default is
            &amp;lt;/em&amp;gt;.</param>
            <param name="highlightPreTag">A string tag that is prepended to hit
            highlights. Must be set with HighlightPostTag. Default is
            &amp;lt;em&amp;gt;.</param>
            <param name="minimumCoverage">A number between 0 and 100 indicating
            the percentage of the index that must be covered by a search query
            in order for the query to be reported as a success. This parameter
            can be useful for ensuring search availability even for services
            with only one replica. The default is 100.</param>
            <param name="orderBy">The comma-separated list of OData $orderby
            expressions by which to sort the results. Each expression can be
            either a field name or a call to the geo.distance() function. Each
            expression can be followed by asc to indicate ascending, and desc
            to indicate descending. The default is ascending order. Ties will
            be broken by the match scores of documents. If no OrderBy is
            specified, the default sort order is descending by document match
            score. There can be at most 32 Orderby clauses.</param>
            <param name="queryType">Gets or sets a value that specifies the
            syntax of the search query. The default is 'simple'. Use 'full' if
            your query uses the Lucene query syntax. Possible values include:
            'simple', 'full'</param>
            <param name="scoringParameters">The list of parameter values to be
            used in scoring functions (for example, referencePointParameter)
            using the format name:value. For example, if the scoring profile
            defines a function with a parameter called 'mylocation' the
            parameter string would be "mylocation:-122.2,44.8"(without the
            quotes).</param>
            <param name="scoringProfile">The name of a scoring profile to
            evaluate match scores for matching documents in order to sort the
            results.</param>
            <param name="search">A full-text search query expression; Use null
            or "*" to match all documents.</param>
            <param name="searchFields">The comma-separated list of field names
            to include in the full-text search.</param>
            <param name="searchMode">A value that specifies whether any or all
            of the search terms must be matched in order to count the document
            as a match. Possible values include: 'any', 'all'</param>
            <param name="select">The comma-separated list of fields to
            retrieve. If unspecified, all fields marked as retrievable in the
            schema are included.</param>
            <param name="skip">The number of search results to skip. This value
            cannot be greater than 100,000. If you need to scan documents in
            sequence, but cannot use Skip due to this limitation, consider
            using OrderBy on a totally-ordered key and Filter with a range
            query instead.</param>
            <param name="top">The number of search results to retrieve. This
            can be used in conjunction with Skip to implement client-side
            paging of search results. If results are truncated due to
            server-side paging, the response will include a continuation token
            that can be passed to ContinueSearch to retrieve the next page of
            results. See DocumentSearchResponse.ContinuationToken for more
            information.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.Count">
            <summary>
            Gets or sets a value that specifies whether to fetch the total
            count of results. Default is false. Setting this value to true may
            have a performance impact. Note that the count returned is an
            approximation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.Facets">
            <summary>
            Gets or sets the list of facet expressions to apply to the search
            query. Each facet expression contains a field name, optionally
            followed by a comma-separated list of name:value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.Filter">
            <summary>
            Gets or sets the OData $filter expression to apply to the search
            query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.Highlight">
            <summary>
            Gets or sets the comma-separated list of field names to use for hit
            highlights. Only searchable fields can be used for hit
            highlighting.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with HighlightPreTag. Default is
            &amp;amp;lt;/em&amp;amp;gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights. Must
            be set with HighlightPostTag. Default is
            &amp;amp;lt;em&amp;amp;gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by a search query in order for
            the query to be reported as a success. This parameter can be useful
            for ensuring search availability even for services with only one
            replica. The default is 100.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.OrderBy">
            <summary>
            Gets or sets the comma-separated list of OData $orderby expressions
            by which to sort the results. Each expression can be either a field
            name or a call to the geo.distance() function. Each expression can
            be followed by asc to indicate ascending, and desc to indicate
            descending. The default is ascending order. Ties will be broken by
            the match scores of documents. If no OrderBy is specified, the
            default sort order is descending by document match score. There can
            be at most 32 Orderby clauses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.QueryType">
            <summary>
            Gets or sets a value that specifies the syntax of the search query.
            The default is 'simple'. Use 'full' if your query uses the Lucene
            query syntax. Possible values include: 'simple', 'full'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.ScoringParameters">
            <summary>
            Gets or sets the list of parameter values to be used in scoring
            functions (for example, referencePointParameter) using the format
            name:value. For example, if the scoring profile defines a function
            with a parameter called 'mylocation' the parameter string would be
            "mylocation:-122.2,44.8"(without the quotes).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.ScoringProfile">
            <summary>
            Gets or sets the name of a scoring profile to evaluate match scores
            for matching documents in order to sort the results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.Search">
            <summary>
            Gets or sets a full-text search query expression; Use null or "*"
            to match all documents.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.SearchFields">
            <summary>
            Gets or sets the comma-separated list of field names to include in
            the full-text search.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.SearchMode">
            <summary>
            Gets or sets a value that specifies whether any or all of the
            search terms must be matched in order to count the document as a
            match. Possible values include: 'any', 'all'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.Select">
            <summary>
            Gets or sets the comma-separated list of fields to retrieve. If
            unspecified, all fields marked as retrievable in the schema are
            included.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.Skip">
            <summary>
            Gets or sets the number of search results to skip. This value
            cannot be greater than 100,000. If you need to scan documents in
            sequence, but cannot use Skip due to this limitation, consider
            using OrderBy on a totally-ordered key and Filter with a range
            query instead.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SearchParametersPayload.Top">
            <summary>
            Gets or sets the number of search results to retrieve. This can be
            used in conjunction with Skip to implement client-side paging of
            search results. If results are truncated due to server-side paging,
            the response will include a continuation token that can be passed
            to ContinueSearch to retrieve the next page of results. See
            DocumentSearchResponse.ContinuationToken for more information.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Models.SuggestParametersPayload">
            <summary>
            Parameters for filtering, sorting, fuzzy matching, and other
            suggestions query behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestParametersPayload.#ctor">
            <summary>
            Initializes a new instance of the SuggestParametersPayload class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.Models.SuggestParametersPayload.#ctor(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Double},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the SuggestParametersPayload class.
            </summary>
            <param name="filter">The OData $filter expression to apply to the
            suggestions query.</param>
            <param name="fuzzy">A value indicating whether to use fuzzy
            matching for the suggestion query. Default is false. when set to
            true, the query will find suggestions even if there's a substituted
            or missing character in the search text. While this provides a
            better experience in some scenarios it comes at a performance cost
            as fuzzy suggestion searches are slower and consume more
            resources.</param>
            <param name="highlightPostTag">A string tag that is appended to hit
            highlights. Must be set with HighlightPreTag. If omitted, hit
            highlighting of suggestions is disabled.</param>
            <param name="highlightPreTag">A string tag that is prepended to hit
            highlights. Must be set with HighlightPostTag. If omitted, hit
            highlighting of suggestions is disabled.</param>
            <param name="minimumCoverage">A number between 0 and 100 indicating
            the percentage of the index that must be covered by a suggestion
            query in order for the query to be reported as a success. This
            parameter can be useful for ensuring search availability even for
            services with only one replica. The default is 80.</param>
            <param name="orderBy">The comma-separated list of OData $orderby
            expressions by which to sort the results. Each expression can be
            either a field name or a call to the geo.distance() function. Each
            expression can be followed by asc to indicate ascending, and desc
            to indicate descending. The default is ascending order. Ties will
            be broken by the match scores of documents. If no OrderBy is
            specified, the default sort order is descending by document match
            score. There can be at most 32 Orderby clauses.</param>
            <param name="search">The search text on which to base
            suggestions.</param>
            <param name="searchFields">The comma-separated list of field names
            to consider when querying for suggestions.</param>
            <param name="select">The comma-separated list of fields to
            retrieve. If unspecified, all fields marked as retrievable in the
            schema are included.</param>
            <param name="suggesterName">The name of the suggester as specified
            in the suggesters collection that's part of the index
            definition.</param>
            <param name="top">The number of suggestions to retrieve. This must
            be a value between 1 and 100. The default is to 5.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Filter">
            <summary>
            Gets or sets the OData $filter expression to apply to the
            suggestions query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Fuzzy">
            <summary>
            Gets or sets a value indicating whether to use fuzzy matching for
            the suggestion query. Default is false. when set to true, the query
            will find suggestions even if there's a substituted or missing
            character in the search text. While this provides a better
            experience in some scenarios it comes at a performance cost as
            fuzzy suggestion searches are slower and consume more resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPostTag">
            <summary>
            Gets or sets a string tag that is appended to hit highlights. Must
            be set with HighlightPreTag. If omitted, hit highlighting of
            suggestions is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPreTag">
            <summary>
            Gets or sets a string tag that is prepended to hit highlights. Must
            be set with HighlightPostTag. If omitted, hit highlighting of
            suggestions is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.MinimumCoverage">
            <summary>
            Gets or sets a number between 0 and 100 indicating the percentage
            of the index that must be covered by a suggestion query in order
            for the query to be reported as a success. This parameter can be
            useful for ensuring search availability even for services with only
            one replica. The default is 80.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.OrderBy">
            <summary>
            Gets or sets the comma-separated list of OData $orderby expressions
            by which to sort the results. Each expression can be either a field
            name or a call to the geo.distance() function. Each expression can
            be followed by asc to indicate ascending, and desc to indicate
            descending. The default is ascending order. Ties will be broken by
            the match scores of documents. If no OrderBy is specified, the
            default sort order is descending by document match score. There can
            be at most 32 Orderby clauses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Search">
            <summary>
            Gets or sets the search text on which to base suggestions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.SearchFields">
            <summary>
            Gets or sets the comma-separated list of field names to consider
            when querying for suggestions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Select">
            <summary>
            Gets or sets the comma-separated list of fields to retrieve. If
            unspecified, all fields marked as retrievable in the schema are
            included.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.SuggesterName">
            <summary>
            Gets or sets the name of the suggester as specified in the
            suggesters collection that's part of the index definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Top">
            <summary>
            Gets or sets the number of suggestions to retrieve. This must be a
            value between 1 and 100. The default is to 5.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.IndexBatchException">
            <summary>
            Exception thrown when an indexing operation only partially succeeds.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.IndexBatchException.#ctor(Microsoft.Azure.Search.Models.DocumentIndexResult)">
            <summary>
            Initializes a new instance of the IndexBatchException class.
            </summary>
            <param name="documentIndexResult">The deserialized response from the index request.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.IndexBatchException.IndexingResults">
            <summary>
            Gets the results for the index batch that contains the status for each individual index action.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.IndexBatchException.FindFailedActionsToRetry(Microsoft.Azure.Search.Models.IndexBatch,System.String)">
            <summary>
            Finds all index actions in the given batch that failed and need to be retried, and returns them in a
            new batch.
            </summary>
            <param name="originalBatch">The batch that partially failed indexing.</param>
            <param name="keyFieldName">The name of the key field from the index schema.</param>
            <returns>
            A new batch containing all the actions from the given batch that failed and should be retried.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Search.IndexBatchException.FindFailedActionsToRetry``1(Microsoft.Azure.Search.Models.IndexBatch{``0},System.Func{``0,System.String})">
            <summary>
            Finds all index actions in the given batch that failed and need to be retried, and returns them in a
            new batch.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <param name="originalBatch">The batch that partially failed indexing.</param>
            <param name="keySelector">A lambda that retrieves a key value from a given document of type T.</param>
            <returns>
            A new batch containing all the actions from the given batch that failed and should be retried.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Search.ISearchIndexClient">
            <summary>
            Client that can be used to query an Azure Search index and upload,
            merge, or delete documents.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.SearchCredentials">
            <summary>
            Gets the credentials used to authenticate to an Azure Search service. This can be either a query API key or an admin API key.
            </summary>
            <remarks>
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys"/> for more information about API keys in Azure Search.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.UseHttpGetForQueries">
            <summary>
            Indicates whether the index client should use HTTP GET for making Search and Suggest requests to the
            Azure Search REST API. The default is <c>false</c>, which indicates that HTTP POST will be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.ISearchIndexClient.TargetDifferentIndex(System.String)">
            <summary>
            Changes the BaseUri of this client to target a different index in the same Azure Search service. This method is NOT thread-safe; You
            must guarantee that no other threads are using the client before calling it.
            </summary>
            <param name="newIndexName">The name of the index to which all subsequent requests should be sent.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.SerializationSettings">
            <summary>
            The base URI of the service.
            </summary>
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.SearchServiceName">
            <summary>
            The name of the Azure Search service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.SearchDnsSuffix">
            <summary>
            The DNS suffix of the Azure Search service. The default is
            search.windows.net.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.IndexName">
            <summary>
            The name of the Azure Search index.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.ISearchIndexClient.Documents">
            <summary>
            Gets the IDocumentsOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.SearchIndexClient">
            <summary>
            Client that can be used to query an Azure Search index and upload,
            merge, or delete documents.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(System.String,System.String,Microsoft.Azure.Search.SearchCredentials)">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='searchServiceName'>Required. The name of the Azure Search service.</param>
            <param name='indexName'>Required. The name of the Azure Search index.</param>
            <param name='credentials'>Required. The credentials used to authenticate to an Azure Search service.
            <see href="https://docs.microsoft.com/rest/api/searchservice/" />
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(System.String,System.String,Microsoft.Azure.Search.SearchCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='searchServiceName'>Required. The name of the Azure Search service.</param>
            <param name='indexName'>Required. The name of the Azure Search index.</param>
            <param name='credentials'>Required. The credentials used to authenticate to an Azure Search service.
            <see href="https://docs.microsoft.com/rest/api/searchservice/" />
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The set of delegating handlers to insert in the http
            client pipeline.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.SearchCredentials">
            <summary>
            Gets the credentials used to authenticate to an Azure Search service. This can be either a query API key or an admin API key.
            </summary>
            <remarks>
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys"/> for more information about API keys in Azure Search.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.UseHttpGetForQueries">
            <summary>
            Indicates whether the index client should use HTTP GET for making Search and Suggest requests to the
            Azure Search REST API. The default is <c>false</c>, which indicates that HTTP POST will be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.TargetDifferentIndex(System.String)">
            <summary>
            Changes the BaseUri of this client to target a different index in the same Azure Search service. This method is NOT thread-safe; You
            must guarantee that no other threads are using the client before calling it.
            </summary>
            <param name="newIndexName">The name of the index to which all subsequent requests should be sent.</param>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.SearchServiceName">
            <summary>
            The name of the Azure Search service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.SearchDnsSuffix">
            <summary>
            The DNS suffix of the Azure Search service. The default is
            search.windows.net.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.IndexName">
            <summary>
            The name of the Azure Search index.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Search.SearchIndexClient.Documents">
            <summary>
            Gets the IDocumentsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SearchIndexClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Search.SearchIndexClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.DateTimeConverter">
            <summary>
            Converts System.DateTime objects to System.DateTimeOffset before serialization.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.DocumentConverter">
            <summary>
            Deserializes JSON objects and arrays to .NET types instead of JObject and JArray.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.DoubleConverter">
            <summary>
            Serializes doubles to and from the OData wire format.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.GeographyPointConverter">
            <summary>
            Serializes Microsoft.Spatial.GeographyPoint objects to Geo-JSON and vice-versa.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.IndexActionConverter`1">
            <summary>
            Serializes IndexAction instances so that the JSON is OData-compliant.
            </summary>
            <typeparam name="T">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.InjectingJsonWriter">
            <summary>
            Allows injection of arbitrary JSON during serialization via a callback.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.SearchResultConverter`2">
            <summary>
            Deserializes SearchResult instances from OData-compliant JSON.
            </summary>
            <typeparam name="TDoc">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <typeparam name="TResult">
            Type of the model class that encapsulates documents in a search response.
            </typeparam>
        </member>
        <member name="T:Microsoft.Azure.Search.Serialization.SuggestResultConverter`2">
            <summary>
            Deserializes SuggestResult instances from OData-compliant JSON.
            </summary>
            <typeparam name="TDoc">
            The CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.
            </typeparam>
            <typeparam name="TResult">
            Type of the model class that encapsulates documents in a suggestion response.
            </typeparam>
        </member>
        <member name="T:Microsoft.Azure.Search.DocumentsProxyOperations">
            <summary>
            DocumentsProxyOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.#ctor(Microsoft.Azure.Search.SearchIndexClient)">
            <summary>
            Initializes a new instance of the DocumentsProxyOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Search.DocumentsProxyOperations.Client">
            <summary>
            Gets a reference to the SearchIndexClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.DocumentsProxyOperations.CountWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Queries the number of documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Count-Documents" />
            </summary>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Search.IDocumentsProxyOperations">
            <summary>
            DocumentsProxyOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Search.IDocumentsProxyOperations.CountWithHttpMessagesAsync(Microsoft.Azure.Search.Models.SearchRequestOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Queries the number of documents in the Azure Search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Count-Documents" />
            </summary>
            <param name='searchRequestOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
    </members>
</doc>
